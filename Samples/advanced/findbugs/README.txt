Using FindBugs with the Fortify Static Code Analyzer (Fortify SCA)

This sample demonstrates how to run the FindBugs static analysis tool together with
Fortify SCA and how filter out results that overlap.

FindBugs (http://findbugs.sourceforge.net/) is a tool that detects quality
issues in Java code. Unlike the Fortify SCA, which runs on Java source files, FindBugs runs on Java bytecode. Therefore, before scanning the project, you should first compile the project and produce class files.

To compile the sample, change to the <SCA_Install>/Samples/advanced/findbugs 
directory and run the following commands:

$ mkdir build
$ javac -d build Warning.java

To scan the sample with FindBugs and Fortify SCA, run the following commands:

$ sourceanalyzer -b findbugs_sample -clean
$ sourceanalyzer -b findbugs_sample -java-build-dir build Warning.java 
$ sourceanalyzer -b findbugs_sample -scan -findbugs -f findbugs_sample.fpr

To examine the analysis results in Fortify Audit Workbench, type:

$ auditworkbench findbugs_sample.fpr

The output should contain the following issue categories:

	Object Model Violation: Just one of equals() and hashCode() Defined: 1
	Dead local store: 2
	Equal objects must have equal hashcodes: 1
	Useless self-operation: 2
	Unwritten field: 2
	Bad casts of object references: 1

Note that Fortify SCA produces one warning and FindBugs produces
eight.  The "Object Model Violation" warning generated by the Fortify SCA on
line 25 is very similar to the "Equal object must have equal hashcodes" warning
generated by FindBugs.  In addition, FindBugs produces two sets of warnings
("Useless self-operation" and "Unwritten field") about the same issues.

To avoid overlapping results, apply the filter.txt filter file (created by the 
Fortify Security Research Group after a thorough analysis of the output from both tools).

Note that the filtering is not completely accurate, because each tool filters at a different level of granularity.

To demonstrate how to avoid overlapping results, scan the sample code using filter.txt as follows:

$ sourceanalyzer -b findbugs_sample -scan -findbugs -filter filter.txt -f findbugs_sample.fpr

Note that FindBugs now produces only five of the six total warnings:

	Object Model Violation: Just one of equals() and hashCode() Defined: 1 
	Dead local store: 2
	Useless self-operation: 2
	Bad casts of object references: 1


